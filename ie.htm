<!DOCTYPE html>
<html>
<head>
    <title>WebRTCAPI</title>
	<script src="socket.io.min.js"></script>
	<script src="api.js"></script>

</head>

<body>

	<br>
	<button onclick="run()">run</button>
	<button onclick="hangup()">hangup</button>
	<button onclick="debug()">debug</button>
	<br>
    
    <object id="WebRTCAPI"
            classid="CLSID:0E8D29CE-D2D0-459A-8009-3B34EFBC43F0"
            height=400
            width=800></object>
    
	<div id='divMe'></div>
	<div id='divPeers'> </div>
	<div id='divATL'> </div>
	<div id='divSDP'> </div>
	<div id='divLog'> </div>

    <script type="text/javascript">

	var myrtcid
	,   rtcPlugin
	, 	iceServers;

	window.onload = function () {

		var element = document.getElementById("WebRTCAPI")
		,   socket = io.connect('172.16.40.111:8080');

		var auth = { 
			"msgType" : "authenticate", 
			"msgData" : {
				"apiVersion" : "1.0.10",
				"applicationName" : "easyrtc.audioVideo" 
			} 
		};

		socket.on('connect', function () {

			socket.emit('easyrtcAuth', auth, function (message) {
				
			    rtcPlugin = new RTCPlugin(element);

				/* Handle displaying the button to connect to other peers... */
				addPeerButtons(message);
				
				myrtcid = message.msgData.easyrtcid;
				iceServers = message.msgData.iceConfig.iceServers;

				socket.on('easyrtcCmd', function (json) {
					if (json.msgData && json.msgData.type)	{						// don't need, could just check for sdp...
						switch(json.msgData.type) {
						case 'answer':
							rtcPlugin.handleAnswer(json);
							break;
						case 'candidate': 
						
							rtcPlugin.handleCandidate({
								candidate : json.msgData.candidate, 
								sdpMid : json.msgData.id, 
								sdpMLineIndex : json.msgData.label
							});

							break;
						case 'roomData': 
							alert('unexpected roomdata: ' + json.msgData.roomData);
							break;
						case 'offer': 
							rtcPlugin.handleOffer(json, function(sdp){
								socket.emit('easyrtcCmd', { 
									msgType : "answer",
									targetEasyrtcid : rtcPlugin.remoteId,
									msgData : { sdp : sdp, "type" : "answer" }
								}, function() {
									//answered.
								});
							});
							break;
						default:
							alert('unexpected message from easyrtc server ' + JSON.stringify(json));
							break;
						}
					}
				});

			});
		});
	};

	function addPeerButtons(message){
		document.getElementById('divLog').innerHTML += 'authorizationCallback()<br>';
		var rtcids = Object.keys(message.msgData.roomData.default.clientList);

		var htm = '';
		for(var i = 0; i < rtcids.length; i++) {
			var n = rtcids[i];
			if (n !== myrtcid)
				htm += '<button onclick="offer(\'' + n + '\')">' + n + '</button>';
		}
		if (htm !== ''){
			document.getElementById('divPeers').innerHTML = htm;
		}
		else{
			document.getElementById('divPeers').innerHTML += 'nobody else available'; //  at http://localhost:8080/demos/demo_audio_video_simple.html';
		}
	}

	function hangup() {
		rtcPlugin.close();
		socket.emit('easyrtcCmd', { "msgType" : "hangup", "targetEasyrtcid" : remotertcid } , function() { 
			document.getElementById('divLog').innerHTML += 'hangup()<br>';
		});
	}

	function debug() {
		rtcPlugin.nativeDebug();
	}

	function offer() {
		// create the offer 
		rtcPlugin.createOffer(function () {
			
			// send it off over signaling
			socket.emit('easyrtcCmd', { 
				msgType : "offer",
				targetEasyrtcid : "offer_easyrtc_todo",
				msgData : { sdp : "", type : "offer" }
			}, function offerCallbackComplete () {
				document.getElementById('divLog').innerHTML += 'offerCallback()<br>';

			});

		});
	}

	function run() {
		rtcPlugin.run();
	}

    </script>

</body>
</html>
